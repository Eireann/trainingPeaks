{
  "name": "grunt-http-upload",
  "description": "Grunt plugin to upload files through POST/PUT HTTP request",
  "version": "0.1.0",
  "homepage": "https://github.com/DiscoverGrunt/grunt-http-upload",
  "author": {
    "name": "Julien M",
    "url": "http://discovergrunt.com"
  },
  "contributors": [
    {
      "name": "Julien Marchand",
      "url": "http://julienma.com"
    },
    {
      "name": "Bastien Petit",
      "url": "http://bastienpetit.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/DiscoverGrunt/grunt-http-upload.git"
  },
  "bugs": {
    "url": "https://github.com/DiscoverGrunt/grunt-http-upload/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/DiscoverGrunt/grunt-http-upload/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "http",
    "upload",
    "post",
    "api",
    "restler",
    "curl"
  ],
  "dependencies": {
    "restler": "~2.0.1"
  },
  "readme": "# grunt-http-upload [![NPM version](https://badge.fury.io/js/grunt-http-upload.png)](http://badge.fury.io/js/grunt-http-upload)\r\n\r\n> Upload files through POST/PUT HTTP request, using [Restler](https://github.com/danwrong/restler), the only Node library known to work flawlessly with multipart file uploads.\r\nSo now you can push a zip `/dist` through your CMS' API!\r\n\r\n## Need Help?\r\nIf you wonder how to install or use this plugin, or even Grunt itself, you should check out our [\"Discover Grunt\" book](http://www.discovergrunt.com).\r\n\r\nIt starts at the very beginning (including how to properly set-up your command-line on Windows and Mac OS X), and goes beyond the official [Getting Started](http://gruntjs.com/getting-started) guide.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-http-upload --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-http-upload');\r\n```\r\n\r\n## The \"http_upload\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `http_upload` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n\r\n  http_upload: {\r\n    your_target: {\r\n      options: {\r\n        url: 'http://example.com/template/123/?token=<%= config.apiKey %>',\r\n        method: 'PUT'\r\n      },\r\n      src: '<%= yeoman.dist %>/dist.zip',\r\n      dest: 'myField'\r\n    },\r\n  },\r\n\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.url\r\nType: `String`\r\nDefault value: `''`\r\n\r\nThis is the full URL to which you can upload a file.\r\nYou can append some variables, like an API token.\r\n\r\n#### options.method\r\nType: `String`\r\nDefault value: `'POST'`\r\n\r\nThe HTTP method to use to upload the file.\r\nLook in the API documentation you want to use, this is usually POST or PUT.\r\n\r\n#### src\r\nType: `String`\r\nDefault value: `''`\r\n\r\nThe local path of the file you wish to upload, using the current working directory as a reference.\r\nYou can upload only 1 file at a time.\r\n\r\n#### dest\r\nType: `String`\r\nDefault value: `''`\r\n\r\nThe field name of the file to be uploaded, on the API side.\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nIn this example, the default POST method is used to upload the local picture `./images/status.jpg` to Basecamp. Their API can be accessed through the URL `https://basecamp.com` (using Basic Auth). When creating an attachment in Basecamp, the \"dest\" field name is not important, so you can set it to anything (`img` in this case).\r\n`method` is set to \"POST\", but could have been omitted as this is the default value.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  http_upload: {\r\n    basecamp: {\r\n      options: {\r\n        url: 'https://user:pwd@basecamp.com/99999999/api/v1/attachments.json',\r\n        method: 'POST'\r\n      },\r\n      src: 'images/status.jpg',\r\n      dest: 'img'\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\nYou should fork this repo, and issue a Pull Request with your proposed changes.\r\n\r\n### Roadmap ideas\r\nFor now the upload is limited to 1 file per target. This could change if I find a scenario needing it.\r\nAlso, it is not possible to add additional payload (no custom data). A lot of API require the Authentication to be sent through the Headers, so this might be one of the next improvement.\r\n\r\n## Release History\r\n0.1.0 - 2013-10-30: Initial release. Supports only 1 multipart file upload.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-http-upload@0.1.0",
  "dist": {
    "shasum": "7bd84c84e1abdad5ba9b57c34ba8864e92df2c06"
  },
  "_resolved": "git+https://github.com/TrainingPeaks/grunt-http-upload.git#615def8c0d460084314397b977bdf60686d7584c",
  "_from": "grunt-http-upload@git+https://github.com/TrainingPeaks/grunt-http-upload.git"
}
