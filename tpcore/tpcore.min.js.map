{"version":3,"file":"tpcore/tpcore.min.js","sources":["main.js","planpreview.js","units.js"],"names":["ensureComponent","$el","name","options","TP","components","Error","obj","data","window","utils","$","fn","tp","component","arguments","args","slice","call","_","isString","method","shift","value","this","each","i","el","apply","undefined","ajaxSetup","xhrFields","withCredentials","ajaxPrefilter","test","url","apiRoot","apiConfig","replace","sportTypes",1,2,3,4,5,6,7,8,9,10,11,12,13,100,"lookupSportType","id","PreviewTemplate","template","join","PreviewModel","Backbone","Model","extend","PreviewView","View","initialize","xhr","model","fetch","always","bind","render","state","display","plot","html","markup","map","get","workout","index","has","series","distance","convert","yaxis","duration","select","serie","any","datum","xaxis","tickSize","tickDecimals","yaxes","min","tickFormatter","format","width","height","planpreview","element","from","to","units","base","factor","sigfig","sigfigs","digits","Math","max","ceil","log","abs","LN10","scale","pow","round","maxdigits","decimals","from_","to_","str","toString","label","_formatDuration","pad","n","length","hours","floor","minutes","seconds","_formatSeconds","_formatMinutes","m","mi","km","s","h"],"mappings":"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","sourcesContent":["(function()\n{\n\n    var TP = window.TP = {};\n    TP.utils = {};\n\n    // Components\n\n    TP.components = {};\n    function ensureComponent($el, name, options)\n    {\n        if(!TP.components[name]) throw Error(\"Unknown component: \" + name);\n\n        var obj = $el.data(\"tp.\" + name);\n\n        if(!obj)\n        {\n            obj = TP.components[name]($el, options);\n            $el.data(\"tp.\" + name, obj);\n        }\n\n        return obj;\n    }\n\n\n    $.fn.tp = function()\n    {\n        var component = arguments[0];\n        var args = [].slice.call(arguments, 1);\n\n        if(_.isString(args[0]))\n        {\n            var method = args.shift();\n        }\n\n        var options = args[0] || {};\n\n        var value;\n        this.each(function(i, el)\n        {\n            var $el = $(el);\n            var obj = ensureComponent($el, component, options);\n\n            if(method) value = obj[method].apply(obj, args);\n        });\n\n        return value === undefined ? this : value;\n    }\n\n    // Ajax\n\n    $.ajaxSetup({ xhrFields: { withCredentials: true } });\n\n    $.ajaxPrefilter(function(options, originalOptions, xhr)\n    {\n        if(/^.*!API!/.test(options.url))\n        {\n            var apiRoot = (window.apiConfig && window.apiConfig.apiRoot);\n            options.url = options.url.replace(/.*!API!/, apiRoot);\n        }\n    });\n\n    // Misc\n\n    var sportTypes =\n    {\n        1: \"Swim\",\n        2: \"Bike\",\n        3: \"Run\",\n        4: \"Brick\",\n        5: \"Crosstrain\",\n        6: \"Race\",\n        7: \"Day Off\",\n        8: \"Mountain Bike\",\n        9: \"Strength\",\n        10: \"Custom\",\n        11: \"XC-Ski\",\n        12: \"Rowing\",\n        13: \"Walk\",\n        100: \"Other\"\n    }\n\n    TP.utils.lookupSportType = function(id)\n    {\n        return sportTypes[id];\n    }\n\n})();\n","(function()\n{\n\n    var PreviewTemplate = _.template(\n    [\n        \"<section>\",\n        \"<h3>Workout #<%= index + 1 %>: <%= TP.utils.lookupSportType(workout.workoutTypeValueId) %></h3>\",\n        \"<% if(workout.totalTimePlanned) { %><p>Planned Time: <%= TP.utils.format('h', 's', workout.totalTimePlanned) %></p><% } %>\",\n        \"<% if(workout.distancePlanned) { %><p>Planned Distance: <%= TP.utils.format('m', 'mi', workout.distancePlanned) %></p><% } %>\",\n        \"<p><%= workout.description %></p>\",\n        \"</section>\"\n    ].join(\"\"));\n\n    var PreviewModel = Backbone.Model.extend(\n    {\n        url: function()\n        {\n            return \"//!API!/plans/v1/plans/\" + this.id + \"/preview\";\n        }\n    });\n\n    var PreviewView = Backbone.View.extend(\n    {\n        initialize: function()\n        {\n            this.xhr = this.model.fetch();\n            this.xhr.always(_.bind(this.render, this));\n            this.render();\n        },\n\n        render: function()\n        {\n            switch(this.xhr.state())\n            {\n                case \"resolved\":\n                    this.display();\n                    this.plot();\n                    break;\n                case \"rejected\":\n                    this.$el.html(\"Error!\");\n                    break;\n                case \"pending\":\n                    this.$el.html(\"Loading&hellip;\");\n                    break;\n            }\n        },\n\n        display: function()\n        {\n            var markup =\n            [\n                \"<div class='plot'></div>\",\n                \"<h2>Sample Workouts:</h2>\",\n                _.map(this.model.get(\"workoutPreviews\"), function(workout, index) { return PreviewTemplate({ workout: workout, index: index }); }).join(\"\"),\n            ].join(\"\");\n\n            this.$el.html(markup);\n        },\n\n        plot: function()\n        {\n            if(!this.$el.has(\".plot\")) return;\n\n            var series =\n            [\n            {\n                data: _.map(this.model.get(\"trainingDistanceByWeek\"), function(distance, i)\n                {\n                    return [i + 1, TP.utils.convert('m', 'mi', distance)];\n                }),\n                yaxis: 1\n            },\n            {\n                data: _.map(this.model.get(\"trainingDurationByWeek\"), function(duration, i)\n                {\n                    return [i + 1, TP.utils.convert('h', 'min', duration)];\n                }),\n                yaxis: 2\n            }\n            ];\n\n            series = _.select(series, function(serie) { return _.any(serie.data, function(datum) { return datum[1]; }); });\n\n            var options = \n            {\n                xaxis: { tickSize: 1, tickDecimals: 0 },\n                yaxes: [\n                    { min: 0, tickFormatter: function(value) { return TP.utils.format('mi', 'mi', value); } },\n                    { min: 0, tickFormatter: function(value) { return TP.utils.format('min', 'min', value); } }\n                ]\n            };\n\n\n            this.$(\".plot\").width(\"100%\").height(\"300px\").plot(series, options);\n        }\n\n    });\n\n    TP.components.planpreview = function(element, options)\n    {\n        var model = new PreviewModel({ id: $(element).data(\"plan-id\") });\n        return new PreviewView({ model: model, el: element });\n    };\n\n})();\n","(function()\n{\n\n    var units =\n    {\n        // Distance\n        \"m\":    { base: \"m\", factor: 1 },\n        \"mi\":   { base: \"m\", factor: 1609.34 },\n        \"km\":   { base: \"m\", factor: 1000 },\n\n        // Time\n        \"s\":    { base: \"s\", factor: 1, format: _formatSeconds, label: \"\" },\n        \"min\":  { base: \"s\", factor: 60, format: _formatMinutes, label: \"\" },\n        \"h\":    { base: \"s\", factor: 60 * 60 },\n    };\n\n    function convert(from, to, value, options)\n    {\n        from = typeof from === \"string\" ? units[from] : from;\n        to = typeof to === \"string\" ? units[to] : to || units[from.base];\n\n        if(!from || !to || from.base !== to.base)\n        {\n            throw Error(\"Invalid conversion\");\n        }\n\n        return (value * from.factor) / to.factor;\n    }\n\n    function sigfig(sigfigs, value)\n    {\n        var digits = Math.max(0, Math.ceil(Math.log(Math.abs(value)) / Math.LN10));\n        var scale = Math.pow(10, sigfigs - digits);\n        return Math.round(value * scale) / scale;\n    }\n\n    function round(maxdigits, value)\n    {\n        var digits = Math.max(1, Math.ceil(Math.log(Math.abs(value)) / Math.LN10));\n        var decimals = Math.max(maxdigits, digits);\n        return sigfig(decimals, value);\n    }\n\n    function format(from, to, value, options)\n    {\n        from_ = typeof from === \"string\" ? units[from] : from;\n        to_ = typeof to === \"string\" ? units[to] : (to || units[from_.base]);\n\n        value = convert(from_, to_, value, options);\n        \n        var str = to_.format ? to_.format(value, options) : round(3, value).toString();\n\n        var label = \"label\" in to_ ? to_.label : to;\n        if(label) str += \" \" + label;\n\n        return str;\n    }\n\n    function _formatDuration(value, options)\n    {\n        var hours = Math.floor(value / 3600);\n        var minutes = Math.floor(value / 60) % 60;\n        var seconds = Math.floor(value) % 60;\n\n        function pad(n)\n        {\n            var str = n.toString();\n            return str.length < 2 ? \"0\" + str : str;\n        }\n\n        var str = hours.toString() + \":\" + pad(minutes);\n        if(options && options.seconds) { str += \":\" + pad(seconds); }\n\n        return str;\n    }\n\n    function _formatSeconds(value, options)\n    {\n        return _formatDuration(value, _.extend({seconds: true}, options));\n    }\n\n    function _formatMinutes(value, options)\n    {\n        return _formatDuration(value * 60, _.extend({seconds: false}, options));\n    }\n\n    // Exports\n    TP.utils.convert = convert;\n    TP.utils.format = format;\n\n})();\n"]}